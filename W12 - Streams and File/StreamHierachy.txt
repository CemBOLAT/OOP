The C++11 standard introduced some enhancements to the stream library hierarchy.
	The stream classes in C++11 are part of the <iostream> header. Here's an overview of the stream hierarchy in C++11:

1 -- Basic I/O Stream Classes:

ios_base: The base class for ios, istream, and ostream. It provides the basic functionality common to both input and output streams.
ios: Provides basic I/O operations, such as flags management and error state checking.
istream: Derived from ios, it is the base class for input streams.
ostream: Derived from ios, it is the base class for output streams.
iostream: Derived from both istream and ostream, it is used for bidirectional streams (both input and output).

2 -- Specialized Stream Classes:

ifstream: Input file stream, used for reading from files.
ofstream: Output file stream, used for writing to files.
fstream: File stream, a combination of ifstream and ofstream for bidirectional file I/O.
istringstream: Input string stream, used for reading from strings.
ostringstream: Output string stream, used for writing to strings.
stringstream: String stream, a combination of istringstream and ostringstream for bidirectional string I/O.

3 --Buffer Classes:

streambuf: The base class for buffer management.
filebuf: Derived from streambuf, provides a buffer for file-based streams.
stringbuf: Derived from streambuf, provides a buffer for string-based streams.

4 -- Manipulators:

ios_base::fmtflags: Enum type for formatting flags.
ios_base::iostate: Enum type for stream states.
ios_base::openmode: Enum type for open modes.

. -- Other Classes:

locale: Represents a C++ locale that encapsulates cultural and language-specific aspects of formatting.
codecvt: Facilitates character conversion between external and internal character representations.
Remember that these classes are part of the <iostream> header. The stream classes provide a powerful and flexible mechanism for handling input and output operations in C++.
